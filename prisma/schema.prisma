// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  name         String?
  email        String        @unique
  password     String
  phone_number String?
  role         Role          @default(USER)
  transactions Transaction[]
  createdAt    DateTime      @default(now()) @db.Timestamptz
  updatedAt    DateTime      @updatedAt @db.Timestamptz
  deletedAt    DateTime?
  deleted      Boolean       @default(false)
}

enum Role {
  USER
  ADMIN
}

model Category {
  id        String    @id @default(cuid())
  name      String
  products  Product[]
  createdAt DateTime  @default(now()) @db.Timestamptz
  updatedAt DateTime  @updatedAt @db.Timestamptz
  deletedAt DateTime?
  deleted   Boolean   @default(false)
}

model Product {
  id           String                   @id @default(cuid())
  name         String
  description  String?
  price        Float
  image_url    String?
  category     Category                 @relation(fields: [category_id], references: [id])
  category_id  String
  stock        Int
  transactions TransactionsOnProducts[]
  createdAt    DateTime                 @default(now()) @db.Timestamptz
  updatedAt    DateTime                 @updatedAt @db.Timestamptz
  deletedAt    DateTime?
  deleted      Boolean                  @default(false)
}

model Transaction {
  id        String                   @id @default(cuid())
  user      User                     @relation(fields: [user_id], references: [id])
  user_id   String
  products  TransactionsOnProducts[]
  createdAt DateTime                 @default(now()) @db.Timestamptz
  updatedAt DateTime                 @updatedAt @db.Timestamptz
  deletedAt DateTime?
  deleted   Boolean                  @default(false)
}

model TransactionsOnProducts {
  id             String      @id @default(cuid())
  product        Product     @relation(fields: [product_id], references: [id])
  product_id     String
  quantity       Int
  transaction    Transaction @relation(fields: [transaction_id], references: [id])
  transaction_id String
  createdAt      DateTime    @default(now()) @db.Timestamptz
  updatedAt      DateTime    @updatedAt @db.Timestamptz
  deletedAt      DateTime?
  deleted        Boolean     @default(false)
}
